#!/bin/bash

set -e

#########################################################
#
# Platform: NCI Gadi HPC
#
# Author: Tracy Chew
# tracy.chew@sydney.edu.au
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance
# <or e.g. bioinformatics assistance of <PERSON>> of Sydney Informatics
# Hub and resources and services from the National Computational
# Infrastructure (NCI), which is supported by the Australian Government
# with access facilitated by the University of Sydney.
#
#########################################################

# RSeQC's read_distribution.py to collect a summary of stats on a BAM file.
# See http://rseqc.sourceforge.net/
# Job resource requirements:
# Benchmark for 260 BAM files, ~80M reads per sample:
# JobName        CPUs_requested  CPUs_used       Mem_requested   Mem_used        CPUtime CPUtime_mins    Walltime_req    Walltime_used   Walltime_mins   JobFS_req        JobFS_used      Efficiency      Service_units(CPU_hours)        Job_exit_status
# read_distribution.o     56      56      256.0GB 175.35GB        89:44:14        5384.23 02:00:00        01:50:20        110.33  200.0MB 8.16MB  0.87    128.72   0

#PBS -P er01
#PBS -N read_distribution
#PBS -l walltime=04:00:00,ncpus=06,mem=128GB,wd
#PBS -q normalbw
#PBS -W umask=022
#PBS -l storage=scratch/er01
#PBS -o ./Logs/read_distribution.o
#PBS -e ./Logs/read_distribution.e

module load openmpi/4.0.2
module load nci-parallel/1.0.0a
module load python3/3.9.2

mkdir -p ./Logs

# NCPUS per task
NCPUS=1
SCRIPT=./read_distribution.sh
INPUTS=./Inputs/read_distribution.inputs

#########################################################
# Do not edit below this line
#########################################################

M=$(( PBS_NCI_NCPUS_PER_NODE / NCPUS )) #tasks per node

sed "s|^|${SCRIPT} |" ${INPUTS} > ${PBS_JOBFS}/input-file

mpirun --np $((M * PBS_NCPUS / PBS_NCI_NCPUS_PER_NODE)) \
        --map-by node:PE=${NCPUS} \
        nci-parallel \
        --verbose \
        --input-file ${PBS_JOBFS}/input-file

